{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Header/Counter.js","components/Header/Header.js","components/Title/Title.js","components/Directions/Directions.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","Wrapper","children","Counter","count","Header","state","handleIncrement","_this","setState","Header_Counter","this","React","Component","Title","Directions","App","friends","_this2","components_Wrapper_Wrapper","components_Header_Header","components_Title_Title","components_Directions_Directions","map","friend","components_FriendCard_FriendCard","id","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"qnWAmBeA,SAhBI,SAAAC,GAAK,OACtBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAGbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eCLJK,SAFC,SAAAT,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMU,YCS1CC,SAPC,SAAAX,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,IAAd,UAAyBJ,EAAMY,UC6BxBC,6MA7BXC,MAAQ,CACJF,MAAO,KAIXG,gBAAkB,WAEdC,EAAKC,SAAS,CAAEL,MAAOI,EAAKF,MAAMF,MAAQ,6EAW1C,OACIX,EAAAC,EAAAC,cAAEe,EAAF,CACIN,MAAOO,KAAKL,MAAMF,MAClBG,gBAAiBI,KAAKJ,yBAvBjBK,IAAMC,WCCZC,SAHD,SAAAtB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMU,YCGrCa,SAHI,SAAAvB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMU,mBCwC/Cc,oNAhCbV,MAAQ,CACNW,mFAWO,IAAAC,EAAAP,KACP,OACElB,EAAAC,EAAAC,cAACwB,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,oBACA5B,EAAAC,EAAAC,cAAC2B,EAAD,iFACCX,KAAKL,MAAMW,QAAQM,IAAI,SAAAC,GAAM,OAC5B/B,EAAAC,EAAAC,cAAC8B,EAAD,CAEEC,GAAIF,EAAOE,GACXC,IAAKH,EAAOE,GACZ1B,MAAOwB,EAAOxB,MACdO,gBAAiBW,EAAKX,4BA1BhBM,oBCJlBe,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0c405310.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\" >\n    <div className=\"img-container\">\n\n\n      <img alt={props.name} src={props.image} />\n    </div>\n    <div className=\"content\">\n\n    </div>\n    {/*<span onClick={() => props.handleIncrement(props.id)} className=\"img\">\n      \n</span>*/}\n  </div >\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\n// If we want a child component to update or pass data to its parent, we can create a method inside the parent for the update\r\n// Then bind the method to the parent, and pass it to the child as a prop\r\n\r\nconst Counter = props => (\r\n    <div className=\"counter\">\r\n        <h2 className=\"\">Score: {props.count}</h2>\r\n\r\n    </div>\r\n);\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Counter from \"./Counter\";\r\n\r\n// By extending the React.Component class, Counter inherits functionality from it\r\nclass Header extends React.Component {\r\n    // Setting the initial state of the Counter component\r\n    state = {\r\n        count: 0\r\n    };\r\n\r\n    // handleIncrement increases this.state.count by 1\r\n    handleIncrement = () => {\r\n        // We always use the setState method to update a component's state\r\n        this.setState({ count: this.state.count + 1 });\r\n    };\r\n\r\n    // handleDecrement decreases this.state.count by 1\r\n    //handleDecrement = () => {\r\n    // We always use the setState method to update a component's state\r\n    //this.setState({ count: this.state.count - 1 });\r\n    //};\r\n\r\n    // The render method returns the JSX that should be rendered\r\n    render() {\r\n        return (\r\n            < Counter\r\n                count={this.state.count}\r\n                handleIncrement={this.handleIncrement}\r\n            //handleDecrement={this.handleDecrement}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./Directions.css\";\r\n\r\nconst Directions = props => <h1 className=\"directions\">{props.children}</h1>;\r\n\r\n\r\nexport default Directions;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Title from \"./components/Title\";\nimport Directions from \"./components/Directions\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends\n  };\n\n  /*removeFriend = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };*/\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header></Header>\n        <Title>Clicky Game</Title>\n        <Directions>Click on an image to earn points, but don't click on any more than once!</Directions>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            //removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            handleIncrement={this.handleIncrement}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}